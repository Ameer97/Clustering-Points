@model Clustering.Dto.TypesCities
@{
    ViewData["Title"] = "GetClusteringMap";
    //Layout = "";
}

@section Head{
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet.markercluster@1.3.0/dist/MarkerCluster.Default.css" />

}

<style>
    #map {
        width: 100%;
        height: 490px;
    }
    .my-custom-icon {
        width: 24px !important;
        height: 24px !important;
        margin-left: -12px;
        margin-top: -12px;
        border-radius: 18px;
        border: 2px solid #3F51B5;
        text-align: center;
        color: #3F51B5;
        background-color: #fff;
        font-size: 16px;
    }
</style>
<div class="row">
    <div class="col-7">
        <div id="map"></div>
    </div>
    <div class="col-5">
        <form asp-action="GetClusteringMap" method="post">
            <div class="form-group">
                <label asp-for="Types" class="control-label"></label>
                <select asp-for="Types" class="form-control" asp-items="Model.Types"></select>
            </div>
            <div class="form-group">
                <label asp-for="Cities" class="control-label"></label>
                <select asp-for="Cities" class="form-control" asp-items="Model.Cities"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="View In Map" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.markercluster@1.3.0/dist/leaflet.markercluster.js"></script>
    <script>

        var planes = @Html.Raw(
        Json.Serialize(
            Model.Points.Select(point => new
            {
                id = point.Id,
                lat = point.Lat,
                lan = point.Lan
            })
        )
    );

        var map = L.map('map', {
            zoomControl: true, maxZoom: 28, minZoom: 1
        }).fitBounds([[29.799992708954807, 37.797432216381964], [36.99103453750632, 49.97967038565338]]);

        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png').addTo(map);

        var markers = L.markerClusterGroup();

        for (var i = 0; i < planes.length; i++) {
            var a = planes[i];
            var title = a.id;
            var marker = L.marker(new L.LatLng(a.lat, a.lan), {
                title: title,
                icon: L.divIcon({
                    className: 'my-custom-icon',
                    html: i
                })
            });
            marker.bindPopup(title);
            markers.addLayer(marker);
        }

        map.addLayer(markers);

        //var addressPoints = [
        //    [-37.8210922667, 175.2209316333, "2"],
        //    [-37.8210819833, 175.2213903167, "3"],
        //    [-37.8210881833, 175.2215004833, "3A"],
        //    [-37.8211946833, 175.2213655333, "1"],
        //    [-37.8209458667, 175.2214051333, "5"],
        //    [-37.8208292333, 175.2214374833, "7"],
        //    [-37.8325816, 175.2238798667, "537"],
        //    [-37.8315855167, 175.2279767, "454"],
        //    [-37.8096336833, 175.2223743833, "176"],
        //    [-37.80970685, 175.2221815833, "178"],
        //    [-37.8102146667, 175.2211562833, "190"],
        //    [-37.8088037167, 175.2242227, "156"],
        //    [-37.8112330167, 175.2193425667, "210"],
        //    [-37.8116368667, 175.2193005167, "212"],
        //    [-37.80812645, 175.2255449333, "146"],
        //    [-37.8080231333, 175.2286383167, "125"],
        //    [-37.8089538667, 175.2222222333, "174"],
        //    [-37.8080905833, 175.2275400667, "129"]
        //]

        //var map = L.map('map').setView([-37.82, 175.23], 13);

        //L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png').addTo(map);

        //var markers = L.markerClusterGroup();

        //for (var i = 0; i < addressPoints.length; i++) {
        //    var a = addressPoints[i];
        //    var title = a[2];
        //    var marker = L.marker(new L.LatLng(a[0], a[1]), {
        //        title: title
        //    });
        //    marker.bindPopup(title);
        //    markers.addLayer(marker);
        //}

        //map.addLayer(markers);
    </script>
}


